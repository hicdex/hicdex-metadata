{"__version": 1, "token_id": 257910, "symbol": "OBJKT", "name": "FNV-M-ABC 002", "description": "This artwork uses a hash function to, given an arbitrary number of input bits from each square \"cell\", generate a single output bit (0 or 1). This same general method is applied in three slightly different ways, each generating a unique 2D \"binary field\". The three fields are layered to create a 3-bit output, corresponding to the three standard (R/G/B) color channels, in order to assign a single output color (of 8 total possibilities) to each square.\nThe 8 colors in this palette are [red, green, blue, cyan, magenta, yellow, black, white].\n\nWhile the output may appear entirely random, it does follow several patterns:\n- Any square of the colors [blue, cyan, magenta, white] will never be HORIZONTALLY adjacent to a square of those same colors.\n- Any square of the colors [green, cyan, yellow, white] will never be VERTICALLY adjacent to a square of those same colors.\n- Any square which is colored either of [cyan, white] will never have any [red, yellow, magenta, white] square directly to its left or directly above it.\nThese three rules combine to create a 2D arrangement of 3-bit numbers which appears globally random but follows strict rules at the local level. The lack of repetition on a global scale results from the pseudorandom nature of the hashing method, and is a key requirement within my own future applications of this math.\n\nThe hash function used in this artwork is a modified version of the \"FNV-1A\" algorithm. This relatively simple approach to non-cryptographic hashing was invented in 1991 by Glenn Fowler, Landon Curt Noll, and Kiem-Phong Vo.\nI learned about this algorithm while seeking a deterministic-but-non-continuous alternative to Perlin Noise. My modified version of the algorithm, used in this artwork, is not computationally identical but has many similarities and shares the same \"XOR by each byte, then multiply the output by a prime number\" approach. I have nicknamed the three base variants of this algorithm \"FNV-M-A\", \"FNV-M-B\", and \"FNV-M-C\". This is where the title \"FNV-M-ABC 002\" originates.\n\nCreated by @MathMakesArt (https://mathmakes.art) on 2021/09/02. 2688 px square generated in p5.js as a (32 x 32) square grid where each cell has (84 x 84) pixel dimensions. This artwork was minted as an extention of my previous \"FNV-M-ABC 001\" mint, which will be sold openly until the burn date in 10 days.\nThis NFT can NOT be purchased on the primary market. It will be given away for free to a combination of Twitter users (16 copies) and collectors of the original \"FNV-M-ABC 001\" mint (16 copies). I am also saving a single copy for myself.", "artifact_uri": "ipfs://QmU8ccbcZRz1GzqTHKkQfBLSU8o1UBDPZrX1JZ8fknTtbU", "display_uri": "ipfs://QmezGTu48w9E8QNrcT8Di4WHdCdtKiT1dKeXs9qgL8PMki", "thumbnail_uri": "ipfs://QmNrhZHUaEqxhyLfqoq1mtHSipkWHeT31LNHb1QEbDHgnc", "formats": [{"uri": "ipfs://QmU8ccbcZRz1GzqTHKkQfBLSU8o1UBDPZrX1JZ8fknTtbU", "mimeType": "image/png"}], "creators": ["tz1gsrd3CfZv4BfPnYKq5pKpHGFVdtGCgd71"], "tags": ["math", "mathmakesart", "generative", "procedural", "processing", "p5js", "javascript", "image", "png", "random", "randomness", "pseudorandom", "pseudorandomness", "rng", "rgb", "cmyk", "rgbcmykw", "hash", "hashfunction", "fnv", "fnv1a", "fnv-1a", "function", "algorithm", "computation", "byte", "bit", "binary", "number", "integer", "discrete", "square", "cell", "grid", "graph", "digraph", "3-bit", "pixels", "pixel", "pixelart"], "extra": {}}
{"__version": 1, "token_id": 209211, "symbol": "OBJKT", "name": "Duplex001", "description": "// \u2588\u2588\u2588\u2588\u2588\u2588\u2557 \u2588\u2588\u2557   \u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2588\u2588\u2557 \u2588\u2588\u2557     \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2557  \u2588\u2588\u2557\n// \u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2551   \u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2551     \u2588\u2588\u2554\u2550\u2550\u2550\u2550\u255d\u255a\u2588\u2588\u2557\u2588\u2588\u2554\u255d\n// \u2588\u2588\u2551  \u2588\u2588\u2551\u2588\u2588\u2551   \u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255d\u2588\u2588\u2551     \u2588\u2588\u2588\u2588\u2588\u2557   \u255a\u2588\u2588\u2588\u2554\u255d \n// \u2588\u2588\u2551  \u2588\u2588\u2551\u2588\u2588\u2551   \u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2550\u255d \u2588\u2588\u2551     \u2588\u2588\u2554\u2550\u2550\u255d   \u2588\u2588\u2554\u2588\u2588\u2557 \n// \u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255d\u255a\u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255d\u2588\u2588\u2551     \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2554\u255d \u2588\u2588\u2557\n// \u255a\u2550\u2550\u2550\u2550\u2550\u255d  \u255a\u2550\u2550\u2550\u2550\u2550\u255d \u255a\u2550\u255d     \u255a\u2550\u2550\u2550\u2550\u2550\u2550\u255d\u255a\u2550\u2550\u2550\u2550\u2550\u2550\u255d\u255a\u2550\u255d  \u255a\u2550\u255d\n//  ______________________________________________________\n// |                                                      |\n// |                                                001   |\n// |______________________________________________________|\n// |                                                      |\n// |  This OBJKT takes its own description metadata and   |\n// |      executes it as code to render its output        |\n// |                                                      |\n// |   It's ALSO able to take instructions from another   |\n// |  OBJKT its connected to, but only if you own it too  |\n// |                                                      |\n// |     Collect both pieces and see the art rendered     |\n// |       together, uniquely based on your wallet!       |\n// |                                                      |\n// |           This is a collaboration between            |\n// |                    Yazid & Eltono                    |\n// |______________________________________________________|\n// |                                                      |\n// |                                        16 Aug 2021   |\n// |______________________________________________________|\n\n      let margeExt = cellHeight / 22;\n      let pash = (cellHeight - 20);\n      let pasl = (cellWidth - 20);\n      let epais = cellHeight / 14;\n      let marge = (epais / 2) + margeExt;\n      let pointsx = [];\n      let pointsy = [];\n      let nordres = [];\n      let nordres_tri = [];\n      let nordre = 0;\n      let xpoint = (pasl - epais) / (2 + 1);\n      let ypoint = (pash - epais) / (2 + 1);\n      for (let i = 0; i < 2 + 2; i = i + 1){\n        for (let j = 0; j < 2 + 2; j = j + 1){\n          pointsx.push(i * xpoint);\n          pointsy.push(j * ypoint);\n          nordres.push(nordre);\n          nordre = nordre + 1;\n        }\n      }\n      shuffle(nordres, true);\n      let nbsegment = 0;\n      for(let i = 0; i < 1;i = i + 1){\n        for(let j = 0; j < 1; j = j + 1){\n          for(let s = 0; s < 3; s = s + 1){\n            if(epais != 0){\n              stroke(pieceColors[s]);\n              strokeWeight(epais);\n              strokeCap(ROUND);\n              strokeJoin(ROUND);\n            }\n            noFill();\n            shuffle(nordres, true);\n            nordres_tri=[];\n            for ( let k = 0; k < 4 + 1; k = k + 1){\n              nordres_tri.push(nordres[k]);\n            }\n            nordres_tri.sort();\n            beginShape();\n            for ( let k = 0; k < 4; k = k + 1){\n              let X = pointsx[nordres_tri[k]] + marge + i * pasl;\n              let Y = pointsy[nordres_tri[k]] + marge + j * pash;\n              vertex(X,Y);\n            }\n            endShape(CLOSE);\n          }\n        }\n      }", "artifact_uri": "ipfs://QmZh7o8H8hR4HdyzXgn2dPGRWThvpP8N4PWhzMxs8YYUSM", "display_uri": "ipfs://QmYjieEAHfim5oypGvaMD6VasScpt9nL4qKYc5xBSvfmt1", "thumbnail_uri": "ipfs://QmSe7heD4DySB1uBytzNmBwTmQzfD7S6BQJHY6743o8pDB", "formats": [{"uri": "ipfs://QmZh7o8H8hR4HdyzXgn2dPGRWThvpP8N4PWhzMxs8YYUSM", "mimeType": "application/x-directory"}], "creators": ["tz1PADW67gHdeXY8mxmM13vn7V7oXvW8MgPr"], "tags": ["experimental", "conceptual", "p5js", "generativeart", "abstract", "interactive", "collaboration", "yazid", "eltono"], "extra": {}}